name: Conan Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

#env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  #BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        build-type: ["Debug", "Release"]

    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"

    - name: Install Conan
      run: |
        python -m pip install --upgrade pip
        python -m pip install conan~=1.0

    - name: Configure Conan
      # Configure conan profiles for build runner
      run: |
        conan user

    - name: Retrieve Dependencies
      uses: actions/checkout@v3
      with:
        repository: szmyd/sisl
        path: deps/sisl
        ref: import_deps

    - name: Export Dependencies
      run: |
        conan export deps/sisl/3rd_party/gperftools
        conan export deps/sisl/3rd_party/jemalloc
        conan export deps/sisl/3rd_party/prerelease_dummy
        conan export deps/sisl oss/master

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install dependencies
      # Build your program with the given configuration
      run: |
        conan export 3rd_party/dpdk
        conan export 3rd_party/fio
        conan export 3rd_party/spdk
        conan install -o iomgr:grpc_support=False -o sisl:malloc_impl=libc -o sisl:prerelease=False -s build_type=${{ matrix.build-type }} --build missing .

    - name: Build
      # Build your program with the given configuration
      run: |
        conan build .
